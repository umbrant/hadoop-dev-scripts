#!/usr/bin/python

import os, sys
import urllib2
import json
import xml.etree.ElementTree as ET
import argparse

parser = argparse.ArgumentParser(description="Download the latest attachment off an Apache JIRA.")
parser.add_argument('jira_number', help="Apache JIRA #, e.g. hdfs-4949 or hadoop-1234. Not case-sensitive.")
args = parser.parse_args()

# Fetch the JIRA's attachments as XML
f = urllib2.urlopen("https://issues.apache.org/jira/sr/jira.issueviews:searchrequest-xml/temp/SearchRequest.xml?jqlQuery=issueKey%3D" + args.jira_number + "&tempMax=100&field=attachments")
search_result = f.read()
f.close()

# Parse XML
root = ET.fromstring(search_result)

# Find the newest attachment based on ID (monotonically increasing)
max_id = -1

drilldown = root
for drill in ["channel", "item", "attachments"]:
    drilldown = drilldown.find(drill)
    if drilldown is None:
        print "No attachments for %s, is it a valid JIRA?" % args.jira_number
        sys.exit(1)

for attachment in drilldown.findall("attachment"):
    name = attachment.get("name")
    if name.endswith(".patch") or name.endswith(".txt"):
        aid = int(attachment.get("id"))
        max_id = max(aid, max_id)

if max_id == -1:
    print "No patch attachments found!"
    sys.exit(1)

f = urllib2.urlopen("https://issues.apache.org/jira/rest/api/2/attachment/%s" % max_id)
attachment = f.read()
f.close()

attach_meta = json.loads(attachment)
attach_filename = attach_meta["filename"]
attach_content_link = attach_meta["content"]

f = urllib2.urlopen(attach_content_link)
data = f.read()
with open(attach_filename, "wb") as attach:
    attach.write(data)

print "Fetched", attach_filename
